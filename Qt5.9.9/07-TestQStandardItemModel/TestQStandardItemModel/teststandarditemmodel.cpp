#include "teststandarditemmodel.h"
#include "ui_teststandarditemmodel.h"
#include <QFileDialog>
#include <QTextStream>
#include <QMessageBox>

TestStandardItemModel::TestStandardItemModel(QWidget *parent)
    : QMainWindow(parent)
    , ui(new Ui::TestStandardItemModel)
{
    ui->setupUi(this);
    this->initilize();
}

TestStandardItemModel::~TestStandardItemModel()
{
    if (!this->ui) delete this->ui;
    if (!this->LabCellPos) delete  this->LabCellPos;
    if(!this->LabCurFile) delete  this->LabCurFile;
    if (!this->LabCellText) delete  this->LabCellText;
    if (!this->theModel) delete  this->theModel;
    if (!this->theSelection) delete  this->theSelection;
}

// 1. ????
void TestStandardItemModel::initilize()
{
    this->theModel = new QStandardItemModel(2,FixedColumnCount,this); //????????2?6?
    this->theSelection = new QItemSelectionModel(this->theModel);//Item????

    //???????????????
    // ???????????this->theSelection???,???currentChanged(current,previous)
    // ???????????????
    connect(this->theSelection,SIGNAL(currentChanged(QModelIndex,QModelIndex)),
                this,SLOT(on_currentItemIndexChanged(QModelIndex,QModelIndex))); //???????????,????on??

    //?tableView??????
    ui->tableView->setModel(theModel); //??????
    ui->tableView->setSelectionModel(theSelection);//??????
    /*
    ????????????????????????????
    ????????????????? Ctrl ?????????????????????????
    ???????????? Shift ?????????????????????????????????????????
    ????????????????????
    */
    ui->tableView->setSelectionMode(QAbstractItemView::ExtendedSelection);//?????????????
    ui->tableView->setSelectionBehavior(QAbstractItemView::SelectItems); // ????????????

    //???????
    this->LabCurFile = new QLabel("filePath: ",this);
    this->LabCurFile->setMinimumWidth(1000);

    this->LabCellPos = new QLabel("cellPos: ",this);
    this->LabCellPos->setMinimumWidth(300);
    this->LabCellPos->setAlignment(Qt::AlignHCenter);

    this->LabCellText = new QLabel("cellText: ",this);
    this->LabCellText->setMinimumWidth(300);

    this->ui->statusBar->addWidget(LabCurFile); //?????
    this->ui->statusBar->addWidget(LabCellPos);
    this->ui->statusBar->addWidget(LabCellText);
}

// 2. ????????????????
void TestStandardItemModel::on_currentItemIndexChanged(const QModelIndex &current, const QModelIndex &previous)
{
    Q_UNUSED(previous);

     if (current.isValid()) //????????
     {
         LabCellPos->setText(QString::asprintf("cellPos:(%d , %d)",
                                   current.row(),current.column())); //???????????
         QStandardItem   *aItem;
         aItem=this->theModel->itemFromIndex(current); //???????Item??
         this->LabCellText->setText("cellText: "+aItem->text()); //??item?????

         QFont   font=aItem->font(); //??item???
         ui->actFontBold->setChecked(font.bold()); //??actFontBold?check??
     }
}

// 3. ????
void TestStandardItemModel::on_actOpen_triggered()
{
        /*
            qDebug()<<"?????????:"<<QCoreApplication::applicationDirPath();
            qDebug()<<"?????????:"<<QCoreApplication::applicationFilePath();
            qDebug()<<"??????:"<<QCoreApplication::applicationName()
            qDebug()<<"????????:"<<QDir::currentPath();
        */
        QString curPath=QCoreApplication::applicationDirPath(); //?????????
        //???????????????,???????????,??,????,???
        // tr("Images (*.png *.xpm *.jpg)"),
        // "Images (*.png *.xpm *.jpg);;Text files (*.txt);;XML files (*.xml)",?????
        this->aFileName=QFileDialog::getOpenFileName(this,"Open File",curPath,
                     "txt(*.txt);;all files(*.*)");
        if (this->aFileName.isEmpty())
            return; //??????????

        QStringList fFileContent;//?????????,????????????

        QFile aFile(this->aFileName);  //????????????
        if (aFile.open(QIODevice::ReadOnly | QIODevice::Text)) //???????????
        {
            QTextStream aStream(&aFile); //????????
            ui->plainTextEdit->clear();//??
            while (!aStream.atEnd()) //????????
            {
                QString str=aStream.readLine();//???????
                ui->plainTextEdit->appendPlainText(str); //????????
                fFileContent.append(str); //?????? fFileContent??,?????iniModelFromStringList????
            }
            aFile.close();//????
             // ???????QLabel????????????
            this->LabCurFile->setText("filePath: "+aFileName);//???????

            //??Actions?enable??,????????????????????????
            ui->actAppend->setEnabled(true);
            ui->actInsert->setEnabled(true);
            ui->actDelete->setEnabled(true);
            ui->actSave->setEnabled(true);
       }
        //? fFileContent?????????????????,??????????tableView
        this->initTableView(fFileContent);
}

// 4. ???????tableView???this->theModel
void TestStandardItemModel::initTableView(QStringList &aFileContent)
{
    // aFileContent?????????test.txt???????
    int rowCnt=aFileContent.count(); //??????1????
    this->theModel->setRowCount(rowCnt-1); //???????????

    //1.????
    QString header=aFileContent.at(0);//?1????,at?????QList????

    // split??????????????QString???QStringList
    //??????????????TAB?,????????????????
    QStringList headerList=header.split(QRegExp("\\s+"),QString::SkipEmptyParts);
    // ?????????????????????????????
    this->theModel->setHorizontalHeaderLabels(headerList);

    //2. ????????????
     int j;
     QStandardItem   *aItem; // ???
    for (int i=1;i<rowCnt;i++) //????i=1???,?????
    {
        QString aLineText=aFileContent.at(i); //??????? i?
        QStringList tmpList=aLineText.split(QRegExp("\\s+"),QString::SkipEmptyParts); // ?????????

        // ???i???5?
        for (j=0;j<FixedColumnCount-1;j++) //test.txt?????FixedColumnCount=6,????
        { //???????,???????Checkable,??????
            aItem=new QStandardItem(tmpList.at(j));//??????????at???j????,????item
            this->theModel->setItem(i-1,j,aItem); //????????????Item,????0??,????0??
        }

         // ?i???6???????,test.txt??6?????"????",????0?1
        aItem=new QStandardItem(headerList.at(j));//?????Checkable,????
        aItem->setCheckable(true); //???Checkable
        // aItem->setEnabled(false); // ????
        if (tmpList.at(j)=="0") // 0?????
            aItem->setCheckState(Qt::Unchecked); //??????check??
        else
            aItem->setCheckState(Qt::Checked); // 1????,????????
        this->theModel->setItem(i-1,j,aItem); //????????????Item
    }
}

// 5. ???
void TestStandardItemModel::on_actAppend_triggered()
{
    QList<QStandardItem*>    aItemList; //???,????????
    QStandardItem   *aItem;
    QStringList text;
    text<<"425"<<"424.99"<<"238.72"<<"1.93";
    for(int i=0;i<FixedColumnCount-2;i++) //?????2?
    {
        aItem=new QStandardItem(text.at(i)); //??Item
        aItemList<<aItem;   //?????,??????1?
    }
    aItem=new QStandardItem(QString("?")); // ??????
    aItemList << aItem ; // ???????

    //???????????"????"???QString
    QString str2=this->theModel->headerData(theModel->columnCount()-1,Qt::Horizontal,Qt::DisplayRole).toString();
    aItem=new QStandardItem(str2); //?? "????"Item
    aItem->setCheckable(true);
    aItemList<<aItem;   //?????

    this->theModel->insertRow(theModel->rowCount(),aItemList); //??1??????????????????1?
    QModelIndex curIndex=theModel->index(theModel->rowCount()-1,0);//?????????ModelIndex
    this->theSelection->clearSelection();//?????
    this->theSelection->setCurrentIndex(curIndex,QItemSelectionModel::Select);//?????????????,?????????
}

// 6.??????
void TestStandardItemModel::on_actSave_triggered()
{

    // QString curPath=QCoreApplication::applicationDirPath(); //?????????
    QString curPath=QDir::currentPath();//????????
    //???????????????
    this->aFileName=QFileDialog::getSaveFileName(this,tr("Select File"),curPath,
                 "txt(*.txt);;all files(*.*)");

    if (this->aFileName.isEmpty()) //????????
        return;

    QFile aFile(this->aFileName);
    if (!(aFile.open(QIODevice::ReadWrite | QIODevice::Text | QIODevice::Truncate)))
        return; //????????????????

    QTextStream aStream(&aFile); //????????
    QStandardItem   *aItem;
    int i,j;
    QString str;
    ui->plainTextEdit->clear();

    //??????
    for (i=0;i<this->theModel->columnCount();i++)
    {
        aItem=this->theModel->horizontalHeaderItem(i); //??????????
        str=str+aItem->text()+"\t\t";  //?TAB????
    }
    aStream<<str<<"\n";  //?????????? \n
    ui->plainTextEdit->appendPlainText(str);

    //???????
    for ( i=0;i<this->theModel->rowCount();i++) // ??
    {
        str="";
        for( j=0;j<this->theModel->columnCount()-1;j++) // ??
        {
            aItem=this->theModel->item(i,j);
            str=str+aItem->text()+QString::asprintf("\t\t");
        }

        aItem=this->theModel->item(i,j); //????????
        if (aItem->checkState()==Qt::Checked)
            str=str+"1";
        else
            str=str+"0";

         ui->plainTextEdit->appendPlainText(str);
         aStream<<str<<"\n";
    }
}

// 7.???
void TestStandardItemModel::on_actInsert_triggered()
{
    QList<QStandardItem*>    aItemList;  //QStandardItem????
    QStandardItem   *aItem;
    QStringList text;
    text<<"425"<<"424.99"<<"238.72"<<"1.93"<<"?";
    for(int i=0;i<FixedColumnCount-1;i++)
    {
        aItem=new QStandardItem(text.at(i)); //????QStandardItem
        aItemList<<aItem;//??????
    }
//    aItem=new QStandardItem("?"); //????QStandardItem
//    aItemList<<aItem;//??????

    QString str;    //??????
    str=theModel->headerData(theModel->columnCount()-1,Qt::Horizontal,Qt::DisplayRole).toString();
    aItem=new QStandardItem(str); //??Item
    aItem->setCheckable(true);//??????CheckBox
    aItemList<<aItem;//??????


    QModelIndex curIndex=this->theSelection->currentIndex(); //????????????
    this->theModel->insertRow(curIndex.row(),aItemList);  //???????????
    this->theSelection->clearSelection();//??????
    this->theSelection->setCurrentIndex(curIndex,QItemSelectionModel::Select); //????
}

// 8.???
void TestStandardItemModel::on_actDelete_triggered()
{
    QModelIndex curIndex=this->theSelection->currentIndex();//??????????????

    if (curIndex.row()==this->theModel->rowCount()-1)//????
        this->theModel->removeRow(curIndex.row()); //??????
    else
    {
        this->theModel->removeRow(curIndex.row());//???????????????
        this->theSelection->setCurrentIndex(curIndex,QItemSelectionModel::Select); //????1????????????
    }
}

// 9.??
void TestStandardItemModel::on_actExit_triggered()
{
    this->close();
}

// 10.????????????????
void TestStandardItemModel::on_actModelData_triggered()
{
    if (this->aFileName.isEmpty()) {
        QMessageBox::information(this,"Information","Please import the file first!");
        return;
    }
    ui->plainTextEdit->clear(); //??
    QStandardItem   *aItem;
    QString str;

    //??????
    int i,j;
    for (i=0;i<this->theModel->columnCount();i++) // ??????
    {
        aItem=this->theModel->horizontalHeaderItem(i); //??????????
        str=str+aItem->text()+"\t"; //?TAB????
    }
    ui->plainTextEdit->appendPlainText(str); //?????????

    //????????
    for (i=0;i<this->theModel->rowCount();i++)
    {
        str=""; // ???????""
        for(j=0;j<this->theModel->columnCount()-1;j++) // ??1?????
        {
            aItem=this->theModel->item(i,j);
            str=str+aItem->text()+QString::asprintf("\t"); //? TAB??
        }

        aItem=this->theModel->item(i,j); //????????????
        if (aItem->checkState()==Qt::Checked)
            str=str+"1";
        else
            str=str+"0";

         ui->plainTextEdit->appendPlainText(str);
    }
}

// 11. ???
void TestStandardItemModel::on_actAlignLeft_triggered()
{
    if (!this->theSelection->hasSelection()) //??????
        return;

    //?????????????????????
    QModelIndexList selectedIndex=this->theSelection->selectedIndexes();

    for (int i=0;i<selectedIndex.count();i++)
    {
        QModelIndex aIndex=selectedIndex.at(i); //???????????
        QStandardItem* aItem=this->theModel->itemFromIndex(aIndex);//???????????
        aItem->setTextAlignment(Qt::AlignLeft);//????????
    }
}

// 12.????
void TestStandardItemModel::on_actAlignCenter_triggered()
{
    if (!this->theSelection->hasSelection()) // ????????????
        return;

    QModelIndexList selectedIndex=this->theSelection->selectedIndexes(); // ???????????

    QModelIndex aIndex;
    QStandardItem   *aItem;

    for (int i=0;i<selectedIndex.count();i++) // ??????
    {
        aIndex=selectedIndex.at(i); // ???i???
        aItem=this->theModel->itemFromIndex(aIndex); // ????????????
        aItem->setTextAlignment(Qt::AlignHCenter); // ??????
    }
}

// 13. ???
void TestStandardItemModel::on_actAlignRight_triggered()
{
    if (!this->theSelection->hasSelection())
        return;

    QModelIndexList selectedIndex=this->theSelection->selectedIndexes();

    QModelIndex aIndex;
    QStandardItem   *aItem;

    for (int i=0;i<selectedIndex.count();i++)
    {
        aIndex=selectedIndex.at(i);
        aItem=this->theModel->itemFromIndex(aIndex);
        aItem->setTextAlignment(Qt::AlignRight);
    }
}

// 14. ??
void TestStandardItemModel::on_actFontBold_triggered(bool checked)
{
    if (!this->theSelection->hasSelection())
        return;

    //??????????????
    QModelIndexList selectedIndex=this->theSelection->selectedIndexes();

    for (int i=0;i<selectedIndex.count();i++)
    {
        QModelIndex aIndex=selectedIndex.at(i); //????????
        QStandardItem* aItem=this->theModel->itemFromIndex(aIndex);//?????
        QFont font=aItem->font(); //????
        font.setBold(checked); //?????????????????
        aItem->setFont(font); //??????
    }
}
