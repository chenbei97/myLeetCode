先定义动画，再使用动画
使用keyframes定义动画，类似定义类选择器
0%是动画的开始，100%是动画的完成，这样的规则就是动画序列
使用百分比规定变化发生的时间，或者用关键词from和to，等同于0%和100%

@keyframes 动画名称 {
    0% {
        width: 100px;
    }
    100% {
        width: 200px;
    }
}

animation: 所有动画属性的简写属性，除了animation-play-state属性
    按照动画名称-持续时间-运动曲线-何时开始-播放次数-是否逆播-动画起始或结束状态写
    move 5s linear 2s infinite alternate
animation-name：@keyframes规定的动画名称
animation-duration：持续时间 默认0
animation-timing-function：动画的速度曲线 默认ease | linear|ease_in|ease_out|ease_in_out|steps()
animation-delay：规定何时开始 默认0
animation-iteration-count：规定播放次数 默认1 还有infinite
animation-direction：规定是否下一周期逆向播放 默认normal，alternate逆播 让动画走回来而不是跳回来
animation-play-state：规定是否正在运行或暂停，默认running，还有pause
animation-fill-mode：规定动画结束后状态保持forwards回到起始backwards，forwards表示停在结束位置

3D平移: translate3d
transform: translateZ(100px); Z轴
transform: translate3d(x,y,z); 3D

透视：perspective
body {
    perspective: 500px; /*透视效果，写在被观察元素的父盒子上*/
}

3D旋转：rotate3d
transform: rotate3Z(45deg); Z轴
transform: rotate3d(x,y,z,deg); 3D

3D呈现：transform-style
控制子元素是否开启三维立体环境
flat：默认不开启
preserve-3d：开启
代码写给父级，但是影响的是子盒子