使用定位的原因：
1.某个元素可以自由的在一个盒子内移动位置并且压住其它盒子
这种无法使用标准流和浮动实现
2. 浮动可以让多个块级盒子一行没有缝隙排列显示，经常用于横向排列盒子
定位则是让盒子自由的在某个盒子内移动位置或者固定在屏幕的某个位置，并且可以压住其它盒子

定位：将盒子定在某个位置，所以也是在摆放盒子
定位 =  定位模式 +  边偏移
定位模式： 指定一个元素在文档中的定位方式，通过CSS的position属性设置
边偏移：决定了元素的最终位置

定位模式的5种值：
    static 静态定位
        默认定位方式,也就是没有定位,没有边偏移,就是标准流很少使用
        选择器 {position: static;}
    relative 相对定位
        元素移动位置时是相对于原来的位置来移动的
        不过即使该元素移动,原来的位置依然保持占有,其他盒子仍然以标准流方式对待
        也就是说别的盒子不会因为浮动就占据了空出来的位置
    absolute 绝对定位
        比较重要的定位方式,绝对定位是元素移动位置时相对于它祖先元素移动的
        如果没有祖先元素或者祖先元素没有定位，就以浏览器为准定位
        如果祖先元素有定位,无论是相对绝对还是固定,则以最近一级的有定位祖先元素为参考点移动位置,也就是如果还有爷爷不会考虑爷爷的定位
        不同于相对定位,绝对定位不会占有原先的位置,所以其它浮动元素可以占据原有腾出来的位置
    fixed 固定定位
        始终以浏览器为准,但是不受祖先元素的影响,这种用于浏览器页面滚动时元素的位置不会改变
        注意,是以浏览器的可视窗口为参照点不是最上层
        固定定位也不占据原有位置,和绝对定位一样也是脱标的,可以看成是特殊的绝对定位

        让盒子固定在版心右侧的技巧:
        1. 让固定定位的盒子left=50%,此时盒子走到了浏览器可视区的一半位置
        2. 让固定定位的盒子margin-left=版心宽度的一半距离,此时多走了版心宽度的一半位置
    sticky 粘性定位
        作为了解,可以认为是相对和固定定位的混合
        也是以浏览器的可视窗口为参照点移动,同时还会占据原先的位置,且必须加top\left\right和bottom之一才起作用
        固定定位随着滚动是完全不移动位置,但是粘性定位会随着滚动条进行适当的调整位置


边偏移的4个值：
    top、bottom、left和right: 80px
    代表元素相对于父元素上、下、左、右边线的距离

绝对定位和相对定位的使用场景:
    相对定位一般给绝对定位当爹

子绝父相布局？
    意思是子级使用绝对定位,父级需要相对定位
    这是因为如果一个大盒子有2个小盒子,如果大盒子先插入的,使用浮动,2个小盒子虽然不会占据位置
    但是浮动只会影响后边的标准流,那么2个小盒子不是压住大盒子,而是在大盒子下方的一行显示
    如果大盒子有3个盒子,希望2个盒子在两边,一个盒子在底部,这样如果还使用浮动,这3个盒子都会1行显示
    所以无法使用浮动实现这样的效果,那么只能使用定位实现
    不过定位如果使用相对定位,定位仍然会占据原有的位置,这样其它盒子不能随意摆放,但是使用绝对定位不会占据原有位置
    那么此时大盒子内的小盒子可以任意摆放,从而实现想要的效果,这也是子绝的来由
    另外大盒子不能没有定位,否则小盒子的绝对定位就相对浏览器了,所以父亲需要有定位才能约束小盒子
    父亲如果加绝对定位,和父亲同级别的盒子就会占据原有的位置导致布局错乱,固定定位自然更不可取,所以父亲只能加相对定位

    不过不是一成不变的,如果父元素不需要占有位置,子绝父绝也是可以的

定位的叠放次序:
    可以使用z-index来控制叠放位置
    选择器 {z-index:1} 数值可以是正负整数和0,数值越大越在上
    另外只有定位的盒子才有z-index属性

绝对定位的拓展:
    绝对定位的盒子居中不能通过margin:0 auto水平居中,但是通过以下方式实现水平垂直居中
    position: absolute;
    left: 50%; 走父盒子宽度的一半
    margin-left: -100px; 往左边走自己盒子宽度的一半
    top: 50%; 走父盒子高度的一半
    margin-top: -100px; 往上走自己盒子高度的一半

    绝对定位和固定定位和浮动具有一些相同的特点:
    1.行内元素添加绝对或者固定定位,可以直接设置宽度和高度
        例如span原本是没有宽度和高度的,加了定位就可以设置了
    2.块级元素添加绝对或者固定定位,如果不给宽度或者高度默认大小是内容的大小
        例如div,不给size就是div文字的高度和宽度,不会占据整个浏览器一行
    3. 浮动,绝对和固定都是脱离标准的,所以不会触发外边距合并的问题
    4. 绝对和固定会完全压住盒子
        如果是标准流,会变成2行不会覆盖,2段文字是分行的
        如果是浮动,虽然会压制它后方标准流的盒子,但是不会压住后方标准流盒子里面的文字和图片
            例如div是float,div下方有个p,div会压住p但是不会压住p的文字
            但是如果是absolute,div还会把p的文字压住

总结:
    一个完整的网页是标准流\浮动\定位一起完成布局的
    标准流让盒子上下排列或者左右排列,垂直的块级盒子使用标准流
    浮动让多个块级元素一行显示或者左右对齐盒子,多个块级盒子水平显示就用浮动布局
    定位有层叠的概念,可以让多个盒子前后叠压显示,如果元素自由在某个盒子移动就使用定位

